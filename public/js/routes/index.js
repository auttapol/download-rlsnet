// Generated by CoffeeScript 1.6.2
exports.index = function(req, res) {
  var colors;

  colors = global.controls.lib.colors();
  console.log('start'.data);
  return res.jsonp({
    user: 'tobi'
  });
};

exports.get = function() {
  var $, check, clearTags, clearText, cn, colors, get, getLinks, getPage, htmlparser, iconv, mysql, parsePage, sanitize, url, urls;

  colors = global.controls.lib.colors();
  check = require('validator').check;
  sanitize = require('validator').sanitize;
  iconv = require('iconv-lite');
  get = require('get');
  mysql = require('mysql');
  htmlparser = require('htmlparser');
  $ = require('jquery');
  clearText = function(text) {
    if (text != null) {
      text = text.replace(/\n/gi, '');
      text = text.replace(/\r/gi, '');
      text = text.replace(/\t/gi, '');
    }
    return text;
  };
  clearTags = function(text) {
    if (text != null) {
      text = text.replace(/\&?amp\;?/gi, '');
      text = text.replace(/\&?nbsp\;?/gi, ' ');
      text = text.replace(/\&?lt\;?/gi, '');
      text = text.replace(/\&?gt\;?/gi, '');
      text = text.replace(/<?\/?sup>?/gi, '');
      text = text.replace(/\&?reg\;?/gi, '');
    }
    return text;
  };
  parsePage = function(page) {
    var caption, div, h, names;

    if (page != null) {
      h = $('#div_nest', page).html();
      h = clearText(h);
      div = $('#tblpanel', page).html();
      div = clearText(div);
      if (div != null) {
        caption = h.replace(/<!--tn_oglavlenie--><h2>(.*?)<\/h2>(.*?)<h2>(.*)/i, '$2');
        names = div.match(/<td class="rest_data"(.*?)<\/td>/gi);
        if (names != null) {
          return names.filter(function(value, i) {
            var name, values;

            if (value.match(/<a(.*?)>(.*?)<\/a>/i)) {
              name = value.replace(/(.*)<a(.*?)>(.*?)<\/a>(.*)/i, '$3');
              name = sanitize(name).escape();
              name = sanitize(name).entityEncode();
              name = clearTags(name);
              console.log(caption, name);
              values = {
                caption: caption,
                name: name
              };
              return cn.query('insert into rlsnet set ?', values, function(err) {
                if (err) {
                  throw err;
                }
              });
            }
          });
        }
      }
    }
    /*
    		names = page.match(/<td class="rest_data">(.*?)<\/td>/gim)
    		if names.length > 0
    			names.filter (value, i) ->
    */

  };
  getPage = function(link) {
    if (link != null) {
      console.log(link);
      return get(link).asBuffer(function(err, b) {
        var page;

        if (err) {
          throw err;
        }
        page = iconv.decode(b, 'win1251');
        return parsePage(page);
      });
    }
  };
  getLinks = function(links) {
    if (links != null) {
      return links.filter(function(value, i) {
        var link;

        link = value.replace(/href="(.*?)"/i, '$1');
        return getPage(link);
      });
    }
  };
  urls = function(i) {
    var def;

    if (i == null) {
      i = 0;
    }
    def = ['http://www.rlsnet.ru/mnn_alf_letter_2.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C0.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C2.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C3.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C4.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C6.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C7.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C8.htm', 'http://www.rlsnet.ru/mnn_alf_letter_C9.htm', 'http://www.rlsnet.ru/mnn_alf_letter_CA.htm', 'http://www.rlsnet.ru/mnn_alf_letter_CB.htm', 'http://www.rlsnet.ru/mnn_alf_letter_CC.htm', 'http://www.rlsnet.ru/mnn_alf_letter_CD.htm', 'http://www.rlsnet.ru/mnn_alf_letter_CE.htm', 'http://www.rlsnet.ru/mnn_alf_letter_CF.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D0.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D1.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D2.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D3.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D4.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D5.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D6.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D7.htm', 'http://www.rlsnet.ru/mnn_alf_letter_D8.htm', 'http://www.rlsnet.ru/mnn_alf_letter_DD.htm', 'http://www.rlsnet.ru/mnn_alf_letter_DF.htm'];
    return def[i];
  };
  if (global.dbsettings != null) {
    cn = mysql.createConnection({
      host: global.dbsettings.connections.mysql.host,
      user: global.dbsettings.connections.mysql.login,
      password: global.dbsettings.connections.mysql.password,
      database: global.dbsettings.connections.mysql.dbname
    });
  }
  if (cn != null) {
    cn.connect();
    if (program.index != null) {
      url = urls(program.index);
    } else {
      url = urls(0);
    }
    if (url != null) {
      console.log(url);
      return get({
        uri: url,
        max_redirs: 0
      }, 'no_proxy').asBuffer(function(err, b) {
        var data, div;

        data = iconv.decode(b, 'win1251');
        if (err) {
          throw err;
        }
        console.log('parsing...');
        div = $('.tn_alf_list', data).html();
        return getLinks(div.match(/href="(.*?)"/gim));
      });
    }
  }
  /*
  	throw err if err
  	res.jsonp
  		href:			req.query.href
  		fn:				req.query.fn
  		html:			data
  */

};
